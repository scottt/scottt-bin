#!/usr/bin/env python3

usage_msg = (
'''
usage: rsync-eta [OPTIONS] TO-CHK-STRING
Synopsis:
$ rsync-eta --start-time '2011-01-02 10:12+0300' ir-chk=1234/5678
$ rsync-eta --start-time '2022-03-04 08:01-0400' to-chk=1234/5678
''')

import sys
import argparse
import datetime
import dateutil.tz
import re

def rsync_to_check_str_parse(s):
    '"ir-chk=4642/6957" -> (4642, 6957)'
    # 'ir-chk' could be 'to-chk'
    match = re.compile(r'.*=([\d]*)/([\d]*)').match(s)
    if match is None:
        raise ValueError('%r is not in expected "ir-chk=NUM/NUM" format' % (s,))
    gs = match.groups()
    return int(gs[0]), int(gs[1])

def main(args):
    now = datetime.datetime.now(dateutil.tz.tzlocal())
    
    parser = argparse.ArgumentParser(description='estimate rsync transfer time', usage=usage_msg)
    parser.add_argument('--start-time', default='2024-07-03T18:24+0800', help='transfer start time')
    parser.add_argument('to_chk', help='rsync ir-chk or to-chk string e.g. ir-chk=1/23')
    options = parser.parse_args(args)

    start_time = datetime.datetime.fromisoformat(options.start_time)
    (to_check, total) = rsync_to_check_str_parse(options.to_chk)
    time_delta = (now - start_time) / (1 - (to_check / total))
    print('time left:', time_delta)
    print('eta:', now + time_delta)

if __name__ == '__main__':
    main(sys.argv[1:])
